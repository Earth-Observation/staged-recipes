{% set name = "jpy" %}
{% set version = "0.9.0" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - git_url: https://github.com/jpy-consortium/jpy.git 
    git_rev: {{ version }}
    git_depth: -1 # (Defaults to -1/not shallow)
    folder: jpy

build:
  number: 0

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - cython                                 # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    # If your project compiles code (such as a C extension) then add the required compilers as separate entries here.
    # Compilers are named 'c', 'cxx' and 'fortran'.
    - {{ compiler('cxx') }}            # [unix]
    - {{ compiler('fortran') }}        # [unix]
    - {{ compiler('c') }}              # [unix]
    - maven 3.6.*
    - cmake
    - openjdk 8.0.332
  host:
    - python
    - pip
    - cython
    - wheel
    - setuptools
    - numpy
  run:
    - python
    - {{ pin_compatible('numpy') }}

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:

  # For python packages, it is useful to run pip check. However, sometimes the
  # metadata used by pip is out of date. Thus this section is optional if it is
  # failing.

  commands:

about:
  home: https://github.com/jpy-consortium/jpy.git
  summary: 'jpy is a bi-directional Python-Java bridge which you can use to embed Java code in Python programs or the other way round. It has been designed particularly with regard to maximum data transfer speed between the two languages.'
  description: |
    It comes with a number of outstanding features:
    * Fully translates Java class hierarchies to Python
    * Transparently handles Java method overloading
    * Support of Java multi-threading
    * Fast and memory-efficient support of primitive Java array parameters via Python buffers (e.g. Numpy arrays)
    * Support of Java methods that modify primitive Java array parameters (mutable parameters)
    * Java arrays translate into Python sequence objects
    * Java API for accessing Python objects (jpy.jar)
  # Remember to specify the license variants for BSD, Apache, GPL, and LGPL.
  # Use the SPDX identifier, e.g: GPL-2.0-only instead of GNU General Public License version 2.0
  # See https://spdx.org/licenses/
  license: Apache-2.0
  # It is required to include a license file in the package,
  # (even if the license doesn't require it) using the license_file entry.
  # Please also note that some projects have multiple license files which all need to be added using a valid yaml list.
  # See https://docs.conda.io/projects/conda-build/en/latest/resources/define-metadata.html#license-file
  license_file: LICENSE.txt
  # The doc_url and dev_url are optional.
  doc_url: https://jpy.readthedocs.io/en/latest/
  dev_url: https://github.com/jpy-consortium/jpy

extra:
  recipe-maintainers:
    # GitHub IDs for maintainers of the recipe.
    # Always check with the people listed below if they are OK becoming maintainers of the recipe. (There will be spam!)
    - IslamAlam
